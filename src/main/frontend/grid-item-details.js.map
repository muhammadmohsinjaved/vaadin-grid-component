{"version":3,"file":"grid-item-details.js","sourceRoot":"","sources":["grid-item-details.ts"],"names":[],"mappings":"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","sourcesContent":["import '@vaadin/form-layout';\r\nimport '@vaadin/grid';\r\nimport '@vaadin/text-field';\r\nimport { html, LitElement } from 'lit';\r\nimport { customElement, property, state } from 'lit/decorators.js';\r\nimport type { GridActiveItemChangedEvent } from '@vaadin/grid';\r\nimport { gridRowDetailsRenderer } from '@vaadin/grid/lit.js';\r\nimport { applyTheme } from 'Frontend/generated/theme';\r\n\r\ninterface ChildData {\r\n    oid: number;\r\n    source_of_pollution_urdu: string;\r\n    source_of_pollution_eng: string;\r\n    crop_acre: number;\r\n    is_multiple_crop_allowed: boolean;\r\n    crop_type_urdu: string;\r\n    crop_type_eng: string;\r\n}\r\n\r\ninterface Crop {\r\n    id: number;\r\n    contamination_source: string;\r\n    contamination_crop_condition: string;\r\n    contamination_prevention: string;\r\n    contamination_control: string;\r\n    hive_oid: number;\r\n    child_data: ChildData[];\r\n}\r\n\r\n@customElement('grid-item-details')\r\nexport class GridItemDetails extends LitElement {\r\n    protected override createRenderRoot() {\r\n        const root = super.createRenderRoot();\r\n        applyTheme(root);\r\n        return root;\r\n    }\r\n\r\n    @state()\r\n    private items: Crop[] = [];\r\n\r\n    @state()\r\n    private detailsOpenedItem: Crop[] = [];\r\n\r\n    @property({ type: String })\r\n    set data(jsonData: string) {\r\n        try {\r\n            const parsedData = JSON.parse(jsonData);\r\n            console.log('Parsed Data:', parsedData); // Debug log to see raw data\r\n            if (Array.isArray(parsedData)) {\r\n                this.items = parsedData;\r\n                this.requestUpdate();\r\n                console.log('Data successfully set:', this.items); // Debug log after setting data\r\n            } else {\r\n                console.error('Data format incorrect:', parsedData);\r\n            }\r\n        } catch (e) {\r\n            console.error('Error parsing data:', e);\r\n        }\r\n    }\r\n\r\n    protected override render() {\r\n        return html`\r\n            <style>\r\n                vaadin-grid {\r\n                    height: 100%;\r\n                }\r\n                .custom-table {\r\n                    width: 100% !important;\r\n                    border-collapse: collapse;\r\n                    border: 3px solid #ddd;\r\n                    margin: 20px 0;\r\n                    padding: 0;\r\n                    font-family: Arial, sans-serif;\r\n                }\r\n                .custom-table th,\r\n                .custom-table td {\r\n                    padding: 12px;\r\n                    text-align: left;\r\n                }\r\n                .custom-table th {\r\n                    background-color: #858383;\r\n                    color: white;\r\n                }\r\n                .custom-table tr {\r\n                    border-bottom: 1px solid #ddd;\r\n                }\r\n                .custom-table tr:nth-child(even) {\r\n                    background-color: #f2f2f2;\r\n                }\r\n            </style>\r\n\r\n            <vaadin-grid\r\n                    theme=\"row-stripes\"\r\n                    .items=\"${this.items}\"\r\n                    .detailsOpenedItems=\"${this.detailsOpenedItem}\"\r\n                    @active-item-changed=\"${(event: GridActiveItemChangedEvent<Crop>) => {\r\n                        const crop = event.detail.value;\r\n                        this.detailsOpenedItem = crop ? [crop] : [];\r\n                        // Log all child data when a row is selected\r\n                        if (crop) {\r\n                            console.log('Child Data:', crop.child_data);\r\n                        }\r\n                    }}\"\r\n                    ${gridRowDetailsRenderer<Crop>((crop) => html`\r\n                        <vaadin-form-layout .responsiveSteps=\"${[{ minWidth: '0', columns: 3 }]}\">\r\n                            <table class=\"custom-table\">\r\n                                <thead>\r\n                                <tr>\r\n                                    <th>Source of Pollution (English)</th>\r\n                                    <th>Crop Acre</th>\r\n                                    <th>Crop Type (English)</th>\r\n                                    <th>Source of Pollution (Urdu)</th>\r\n                                    <th>Crop Type (Urdu)</th>\r\n                                    <th>Multiple Crops Allowed</th>\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                ${crop.child_data.map(item => html`\r\n                                    <tr>\r\n                                        <td>${item.source_of_pollution_eng}</td>\r\n                                        <td>${item.crop_acre}</td>\r\n                                        <td>${item.crop_type_eng}</td>\r\n                                        <td>${item.source_of_pollution_urdu}</td>\r\n                                        <td>${item.crop_type_urdu}</td>\r\n                                        <td>${item.is_multiple_crop_allowed ? 'Yes' : 'No'}</td>\r\n                                    </tr>\r\n                                `)}\r\n                                </tbody>\r\n                            </table>\r\n                        </vaadin-form-layout>\r\n                    `, [])}\r\n            >\r\n                <vaadin-grid-column\r\n                        path=\"contamination_source\"\r\n                        header=\"Contamination Source\"\r\n                ></vaadin-grid-column>\r\n                <vaadin-grid-column\r\n                        path=\"contamination_crop_condition\"\r\n                        header=\"Condition\"\r\n                ></vaadin-grid-column>\r\n                <vaadin-grid-column\r\n                        path=\"contamination_prevention\"\r\n                        header=\"Prevention\"\r\n                ></vaadin-grid-column>\r\n                <vaadin-grid-column\r\n                        path=\"contamination_control\"\r\n                        header=\"Control\"\r\n                ></vaadin-grid-column>\r\n                <vaadin-grid-column\r\n                        path=\"hive_oid\"\r\n                        header=\"OID\"\r\n                ></vaadin-grid-column>\r\n            </vaadin-grid>\r\n        `;\r\n    }\r\n}\r\n"]}